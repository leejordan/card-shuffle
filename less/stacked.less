//
// Stacked panels
// --------------------------------------------------

///
// Variables
// --------------------------------------------------
@colorPositive: lighten(#80a000, 40%);
@colorDefault: #333;
@height: 400px;
@verticalMovement: 50px;
@buffer: 20px;
@zindex-base: 900;
@zindex-top: 950;
@numCards: 5;

///
// Mixins stolen from bootstrap - remove these if you already use bootstrap
// --------------------------------------------------
.transition(@transition) {
    -webkit-transition:     @transition;
    -moz-transition:        @transition;
    -ms-transition:         @transition;
    -o-transition:          @transition;
    transition:             @transition;
}

.transform(@string){
    -webkit-transform:      @string;
    -moz-transform:         @string;
    -ms-transform:          @string;
    -o-transform:           @string;
    transform:              @string;
}

.animation(@animation) {
    -webkit-animation: @animation;
    animation: @animation;
}

.box-shadow(@shadow) {
    -webkit-box-shadow: @shadow;
    box-shadow: @shadow;
}

.img-responsive() {
    display: block;
    max-width: 100%;
    height: auto; 
}

.center-block() {
    display: block;
    margin-left: auto;
    margin-right: auto;
}

///
// Mixins specific for the stacked cards
// --------------------------------------------------

// Generates stacked card css
.generateCards (@n) when (@n > 0) {
    .cardWidth(@n);
    .cardPosition(@n);
    .generateCards(@n - 1);
}

// Widths
.cardWidth(@n : 1) {
    @nth: ~":nth-last-child(@{n})";
    &:first-child@{nth},
    &:first-child@{nth} ~ .stacked-card {
        width: 100% - (10% * @n) + 10%;
    }
}

// Positions
.cardPosition(@n : 1) {
    @nth: ~":nth-child(@{n})";
    &@{nth} {
        left: (@n - 1) * 10%;
        z-index: (@zindex-base - @n) - 1;
    }
}

// // Card lifted up
// .cardUp() {
//     border-color: @colorDefault;
//     margin-top: -@verticalMovement;
//     .transform(scale(0.8)rotate(1deg));
// }

// // Card back in the stack
// .cardDown() {
//     border-color: @colorDefault;
//     margin-top: 0;
//     .transform(scale(0.8)rotate(0deg));
// }

.cardSelected() {
    z-index: @zindex-top;
    left: 10%;
    right: 10%;
    top: 50%;
    width: 80% !important;
    .transform(scale(1));
}

.cardDefault() {
    position: absolute;
    z-index: @zindex-base;
    top: 0;
    min-height: @height;
    outline: none;
    background: #fff;
    border: 1px solid @colorDefault;
    .box-shadow(0 0 3px @colorDefault);
    .transform(scale(0.8));

    // &:hover,
    // &:focus {
    //     .cardUp();
    // }
}

.cardSelectorOn() {
    position: absolute;
    display: block;
    width: 100%;
    height: 100%;
    opacity: 0.2;

    &:hover,
    &:focus {
        background-color: yellow;
    }
}

.cardSelectorOff() {
    display: none;
}

///
// Generate css
// --------------------------------------------------

body {
    background-color: #e9e9e9;
}

.stacked-card-wrap {
    position: relative;
    min-height: @height;
    padding-top: (@verticalMovement + @buffer);
    margin-bottom: ((@height / 2) + @buffer);

    .stacked-card {
        .generateCards(@numCards);
        .cardDefault();

        .stacked-card-select {
            .cardSelectorOn();
        }

        &:target {
            .animation(card-select 1s 1 ease-in-out);
            -webkit-animation-fill-mode: forwards;
            animation-fill-mode: forwards;

            .stacked-card-select {
                .cardSelectorOff();
            }
        }

        // &:hover,
        // &:focus {
        //     .cardUp();
        // }
    }
}

.cardSelectKeyframes() {
    0% {
        z-index: inherit;
        top: 0;
        .transform(scale(0.8));
    }
    50% {
        z-index: @zindex-top;
        top: 80%;
        .transform(scale(0.8));
    }
    100% {
        z-index: @zindex-top;
        left: 10%;
        right: 10%;
        top: 30%;
        width: 80%;
        .transform(scale(1));
    }
}

@-webkit-keyframes card-select {
    .cardSelectKeyframes();
}

@keyframes card-select {
    .cardSelectKeyframes();
}
